services:
  bolddapi:
    container_name: boldd
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    ports:
      - 8003:8003
    volumes:
      - ${HOME}/.config/boldd/config.yaml:app/boldd/config.yaml:ro
    networks:
      - boldd_api
    depends_on:
      - postgresdb
    develop:
      watch:
        - path: .
          action: rebuild

  postgresdb:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-boldd}
    ports:
      - ":5432"
    volumes:
      - postgres_data:/var/lib/postgres/data
    networks:
      - boldd_api
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-boldd}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    container_name: boldd_migrations
    volumes:
      - ./internal/infrastructure/persistence/migrations:/migrations:ro
    command: ["-path", "/migrations", "-database", "postgres://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgresdb:5432/${DB_NAME:-boldd}?sslmode=disable", "up"]
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
        - boldd_api

networks:
  boldd_api:
    driver: bridge

volumes:
  postgres_data: {}